<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='normalized_age_data' inline='true' name='federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='normalized_age_data' name='textscan.0tucmib0tnpnsv15axjg507iinnc'>
            <connection class='textscan' directory='C:/Users/sebas/OneDrive/MSBA/SQL/Data-Mgmt-Project/Cleaned Data and Source Code' filename='normalized_age_data' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0tucmib0tnpnsv15axjg507iinnc' name='normalized_age_data' table='[normalized_age_data]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='age_bracket' ordinal='1' />
            <column datatype='string' name='time_bracket' ordinal='2' />
            <column datatype='string' name='time_segment' ordinal='3' />
            <column datatype='real' name='Crash_Norm_Annual' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[normalized_age_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[normalized_age_data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_bracket</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age_bracket]</local-name>
            <parent-name>[normalized_age_data]</parent-name>
            <remote-alias>age_bracket</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_bracket</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_bracket]</local-name>
            <parent-name>[normalized_age_data]</parent-name>
            <remote-alias>time_bracket</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_segment]</local-name>
            <parent-name>[normalized_age_data]</parent-name>
            <remote-alias>time_segment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash_Norm_Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crash_Norm_Annual]</local-name>
            <parent-name>[normalized_age_data]</parent-name>
            <remote-alias>Crash_Norm_Annual</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Crash Norm Annual' datatype='real' name='[Crash_Norm_Annual]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Age Bracket' datatype='string' name='[age_bracket]' role='dimension' type='nominal' />
      <column caption='Time Bracket' datatype='string' name='[time_bracket]' role='dimension' type='nominal' />
      <column caption='Time Segment' datatype='string' name='[time_segment]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Crashes Age Bracket vs Time Bracket per Time Segment&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='normalized_age_data' name='federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz'>
            <column caption='Crash Norm Annual' datatype='real' name='[Crash_Norm_Annual]' role='measure' type='quantitative' />
            <column caption='Age Bracket' datatype='string' name='[age_bracket]' role='dimension' type='nominal' />
            <column-instance column='[age_bracket]' derivation='None' name='[none:age_bracket:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_bracket]' derivation='None' name='[none:time_bracket:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_segment]' derivation='None' name='[none:time_segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crash_Norm_Annual]' derivation='Sum' name='[sum:Crash_Norm_Annual:qk]' pivot='key' type='quantitative' />
            <column caption='Time Bracket' datatype='string' name='[time_bracket]' role='dimension' type='nominal' />
            <column caption='Time Segment' datatype='string' name='[time_segment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:age_bracket:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:age_bracket:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:age_bracket:nk]' member='&quot;error&quot;' />
                <groupfilter function='member' level='[none:age_bracket:nk]' member='&quot;less than 17&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:time_bracket:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;morning&quot;</bucket>
              <bucket>&quot;day&quot;</bucket>
              <bucket>&quot;afternoon&quot;</bucket>
              <bucket>&quot;night&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:age_bracket:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:time_bracket:nk] / [federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:time_segment:nk])</rows>
        <cols>([federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:age_bracket:nk] * [federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[sum:Crash_Norm_Annual:qk])</cols>
      </table>
      <simple-id uuid='{51D7DB44-6770-44C0-8959-4C1EE8FA2AE4}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:age_bracket:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;less than 17&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:age_bracket:nk]</field>
            <field>[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:time_bracket:nk]</field>
            <field>[federated.0mdl3ld0vpj8zy1bchrdi0gzu4tz].[none:time_segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4550D05C-0070-4B8B-B31C-43CC9FA9C9D2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      jQG7IdyUqI8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
